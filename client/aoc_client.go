// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/arcfraofficial/aoc-go-sdk/client/alert"
	"github.com/arcfraofficial/aoc-go-sdk/client/cluster"
	"github.com/arcfraofficial/aoc-go-sdk/client/content_library_image"
	"github.com/arcfraofficial/aoc-go-sdk/client/content_library_vm_template"
	"github.com/arcfraofficial/aoc-go-sdk/client/datacenter"
	"github.com/arcfraofficial/aoc-go-sdk/client/elf_image"
	"github.com/arcfraofficial/aoc-go-sdk/client/elf_storage_policy"
	"github.com/arcfraofficial/aoc-go-sdk/client/gpu_device"
	"github.com/arcfraofficial/aoc-go-sdk/client/host"
	"github.com/arcfraofficial/aoc-go-sdk/client/iscsi_lun"
	"github.com/arcfraofficial/aoc-go-sdk/client/iscsi_target"
	"github.com/arcfraofficial/aoc-go-sdk/client/label"
	"github.com/arcfraofficial/aoc-go-sdk/client/nic"
	"github.com/arcfraofficial/aoc-go-sdk/client/observability"
	"github.com/arcfraofficial/aoc-go-sdk/client/organization"
	"github.com/arcfraofficial/aoc-go-sdk/client/ovf"
	"github.com/arcfraofficial/aoc-go-sdk/client/svt_image"
	"github.com/arcfraofficial/aoc-go-sdk/client/system_audit_log"
	"github.com/arcfraofficial/aoc-go-sdk/client/task"
	"github.com/arcfraofficial/aoc-go-sdk/client/upload_task"
	"github.com/arcfraofficial/aoc-go-sdk/client/usb_device"
	"github.com/arcfraofficial/aoc-go-sdk/client/user"
	"github.com/arcfraofficial/aoc-go-sdk/client/user_audit_log"
	"github.com/arcfraofficial/aoc-go-sdk/client/user_role_next"
	"github.com/arcfraofficial/aoc-go-sdk/client/vds"
	"github.com/arcfraofficial/aoc-go-sdk/client/vlan"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm_disk"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm_export_file"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm_folder"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm_nic"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm_placement_group"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm_snapshot"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm_template"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm_volume"
	"github.com/arcfraofficial/aoc-go-sdk/client/vm_volume_snapshot"
)

// Default aoc HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new aoc HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Aoc {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new aoc HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Aoc {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new aoc client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Aoc {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Aoc)
	cli.Transport = transport
	cli.Alert = alert.New(transport, formats)
	cli.Cluster = cluster.New(transport, formats)
	cli.ContentLibraryImage = content_library_image.New(transport, formats)
	cli.ContentLibraryVMTemplate = content_library_vm_template.New(transport, formats)
	cli.Datacenter = datacenter.New(transport, formats)
	cli.ElfImage = elf_image.New(transport, formats)
	cli.ElfStoragePolicy = elf_storage_policy.New(transport, formats)
	cli.GpuDevice = gpu_device.New(transport, formats)
	cli.Host = host.New(transport, formats)
	cli.IscsiLun = iscsi_lun.New(transport, formats)
	cli.IscsiTarget = iscsi_target.New(transport, formats)
	cli.Label = label.New(transport, formats)
	cli.Nic = nic.New(transport, formats)
	cli.Observability = observability.New(transport, formats)
	cli.Organization = organization.New(transport, formats)
	cli.Ovf = ovf.New(transport, formats)
	cli.SvtImage = svt_image.New(transport, formats)
	cli.SystemAuditLog = system_audit_log.New(transport, formats)
	cli.Task = task.New(transport, formats)
	cli.UploadTask = upload_task.New(transport, formats)
	cli.UsbDevice = usb_device.New(transport, formats)
	cli.User = user.New(transport, formats)
	cli.UserAuditLog = user_audit_log.New(transport, formats)
	cli.UserRoleNext = user_role_next.New(transport, formats)
	cli.Vds = vds.New(transport, formats)
	cli.Vlan = vlan.New(transport, formats)
	cli.VM = vm.New(transport, formats)
	cli.VMDisk = vm_disk.New(transport, formats)
	cli.VMExportFile = vm_export_file.New(transport, formats)
	cli.VMFolder = vm_folder.New(transport, formats)
	cli.VMNic = vm_nic.New(transport, formats)
	cli.VMPlacementGroup = vm_placement_group.New(transport, formats)
	cli.VMSnapshot = vm_snapshot.New(transport, formats)
	cli.VMTemplate = vm_template.New(transport, formats)
	cli.VMVolume = vm_volume.New(transport, formats)
	cli.VMVolumeSnapshot = vm_volume_snapshot.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Aoc is a client for aoc
type Aoc struct {
	Alert alert.ClientService

	Cluster cluster.ClientService

	ContentLibraryImage content_library_image.ClientService

	ContentLibraryVMTemplate content_library_vm_template.ClientService

	Datacenter datacenter.ClientService

	ElfImage elf_image.ClientService

	ElfStoragePolicy elf_storage_policy.ClientService

	GpuDevice gpu_device.ClientService

	Host host.ClientService

	IscsiLun iscsi_lun.ClientService

	IscsiTarget iscsi_target.ClientService

	Label label.ClientService

	Nic nic.ClientService

	Observability observability.ClientService

	Organization organization.ClientService

	Ovf ovf.ClientService

	SvtImage svt_image.ClientService

	SystemAuditLog system_audit_log.ClientService

	Task task.ClientService

	UploadTask upload_task.ClientService

	UsbDevice usb_device.ClientService

	User user.ClientService

	UserAuditLog user_audit_log.ClientService

	UserRoleNext user_role_next.ClientService

	Vds vds.ClientService

	Vlan vlan.ClientService

	VM vm.ClientService

	VMDisk vm_disk.ClientService

	VMExportFile vm_export_file.ClientService

	VMFolder vm_folder.ClientService

	VMNic vm_nic.ClientService

	VMPlacementGroup vm_placement_group.ClientService

	VMSnapshot vm_snapshot.ClientService

	VMTemplate vm_template.ClientService

	VMVolume vm_volume.ClientService

	VMVolumeSnapshot vm_volume_snapshot.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Aoc) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Alert.SetTransport(transport)
	c.Cluster.SetTransport(transport)
	c.ContentLibraryImage.SetTransport(transport)
	c.ContentLibraryVMTemplate.SetTransport(transport)
	c.Datacenter.SetTransport(transport)
	c.ElfImage.SetTransport(transport)
	c.ElfStoragePolicy.SetTransport(transport)
	c.GpuDevice.SetTransport(transport)
	c.Host.SetTransport(transport)
	c.IscsiLun.SetTransport(transport)
	c.IscsiTarget.SetTransport(transport)
	c.Label.SetTransport(transport)
	c.Nic.SetTransport(transport)
	c.Observability.SetTransport(transport)
	c.Organization.SetTransport(transport)
	c.Ovf.SetTransport(transport)
	c.SvtImage.SetTransport(transport)
	c.SystemAuditLog.SetTransport(transport)
	c.Task.SetTransport(transport)
	c.UploadTask.SetTransport(transport)
	c.UsbDevice.SetTransport(transport)
	c.User.SetTransport(transport)
	c.UserAuditLog.SetTransport(transport)
	c.UserRoleNext.SetTransport(transport)
	c.Vds.SetTransport(transport)
	c.Vlan.SetTransport(transport)
	c.VM.SetTransport(transport)
	c.VMDisk.SetTransport(transport)
	c.VMExportFile.SetTransport(transport)
	c.VMFolder.SetTransport(transport)
	c.VMNic.SetTransport(transport)
	c.VMPlacementGroup.SetTransport(transport)
	c.VMSnapshot.SetTransport(transport)
	c.VMTemplate.SetTransport(transport)
	c.VMVolume.SetTransport(transport)
	c.VMVolumeSnapshot.SetTransport(transport)
}
